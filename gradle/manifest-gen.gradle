/*
 * The MANIFEST.MF files of this project are generated. For main bundles we use the osgi
 * plugin, while for source bundles we generate the content ourselves.
 */

apply plugin: 'biz.aQute.bnd.builder'

def baseVersion = project.version
if (baseVersion.endsWith('-SNAPSHOT'))
	baseVersion = baseVersion.substring(0, baseVersion.length() - 9)
else if (baseVersion.split('\\.').length == 4)
	baseVersion = baseVersion.substring(0, baseVersion.lastIndexOf('.'))
def qualifiedVersion = baseVersion + '.v' + buildTime

jar.bnd (
	'Bundle-Version', qualifiedVersion,
	'Import-Package', 'org.apache.log4j.*;version="1.2.15"',
	'Import-Package', 'com.google.common.*;version="[14.0,22.0)"',
	'Import-Package', 'org.eclipse.core.runtime.*;version=!;common=!',
	'Import-Package', "org.eclipse.xtext.xbase.lib.*;version=\"${version}\"",
	'Import-Package', '!org.eclipse.xtext.web.example.*',
	'Import-Package', '!org.eclipse.xtext.idea.example.*',
	'Import-Package', '!org.eclipse.xtend2.lib.*',
	'Import-Package', '!org.eclipse.xtext.junit4.*',
	'Import-Package', '!org.hamcrest.*',
	'Import-Package', '!org.junit.*'
)

//------------------------------------------------------
// Generate a manifest for the source bundle

def sourcesManifestFile = "$buildDir/tmp/genSourcesManifest/MANIFEST.MF"

task genSourcesManifest {
	outputs.file(sourcesManifestFile)
	inputs.property('qualifiedVersion', qualifiedVersion)
	inputs.property('projectName', project.name)
	inputs.property('projectTitle', project.findProperty('title')).optional(true)
	doLast {
		def f = new File(sourcesManifestFile)
		f.parentFile.mkdirs()
		def writer = new PrintWriter(f)
		writer.println("Manifest-Version: 1.0")
		writer.println("Bundle-ManifestVersion: 2")
		writer.println("Bundle-SymbolicName: ${project.name}.source")
		writer.println("Bundle-Version: ${qualifiedVersion}")
		if (project.hasProperty('title'))
			writer.println("Bundle-Name: ${project.title} Sources")
		else
			writer.println("Bundle-Name: Sources")
		writer.println("Bundle-Vendor: Eclipse Xtext")
		writer.println("Eclipse-SourceBundle: ${project.name};version=\"${qualifiedVersion}\"")
		writer.close()
	}
}

sourcesJar {
	dependsOn genSourcesManifest
	manifest {
		from sourcesManifestFile
	}
}
